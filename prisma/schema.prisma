generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

enum Role {
  OWNER
  ADMIN
  AGENT
}

enum GermanLevel {
  A1
  A2
  B1
  B2
  C1
  C2
}

model User {
  id                    String                 @id @default(cuid())
  email                 String                 @unique
  isEmailVerified       Boolean                @default(false)
  emailVerified         DateTime?
  providerUserId        String?                @unique
  name                  String
  phoneNumber           String?
  level                 GermanLevel            @default(A1)
  profileImageUrl       String?
  password              String?
  role                  Role                   @default(AGENT)
  isDeleted             Boolean                @default(false)
  lastLogin             DateTime?
  lastLogout            DateTime?
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  emailVerificationCode EmailVerificationCode?
}

model Level {
  id          String      @id @default(cuid())
  name        GermanLevel @unique
  imageUrl    String
  description String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  topics      Topic[]
}

model Topic {
  id          String   @id @default(cuid())
  name        String
  description String
  imageUrl    String
  levelId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  level       Level    @relation(fields: [levelId], references: [id])
  notes       Note[]

  @@unique([levelId, name])
}

model Note {
  id        String   @id @default(cuid())
  content   Json
  number    Int
  topicId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  topic     Topic    @relation(fields: [topicId], references: [id])

  @@unique([topicId, number])
}

model EmailVerificationCode {
  id        String   @id @default(cuid())
  userId    String   @unique
  code      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}
